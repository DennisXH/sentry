version: '3.5'
x-defaults: &sentry-defaults
  restart: unless-stopped
  build:
    context: ./build/sentry/
    args:
      SENTRY_IMAGE: 'sentry:9.1.2'
  depends_on:
    - redis
    - postgres
    - memcached
    - smtp
  volumes:
    - sentry-data:/var/lib/sentry/files
services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./build/nginx-proxy/conf.d/:/etc/nginx/conf.d/
      - ./storage/nginx-proxy/log/:/var/log/nginx/
    networks:
      - app-network
  smtp:
    restart: unless-stopped
    container_name: smtp
    image: tianon/exim4
  memcached:
    restart: unless-stopped
    container_name: memcached
    image: memcached:1.5-alpine
    networks:
      - internal-network
  redis:
    restart: unless-stopped
    container_name: redis
    image: redis:3.2-alpine
    networks:
      - internal-network
  postgres:
    restart: unless-stopped
    container_name: postgres
    image: postgres:9.5
    volumes:
      - sentry-postgres:/var/lib/postgresql/data
    networks:
      - internal-network
  sentry:
    <<: *sentry-defaults
    container_name: sentry
    environment:
      - SENTRY_MEMCACHED_HOST=memcached
      - SENTRY_REDIS_HOST=redis
      - SENTRY_POSTGRES_HOST=postgres
      - SENTRY_EMAIL_HOST=smtp
      - SENTRY_SECRET_KEY=${SENTRY_SECRET_KEY}
      - VIRTUAL_HOST=${SENTRY_HOST}
    networks:
      - app-network
      - internal-network
  sentry-cron:
    <<: *sentry-defaults
    container_name: sentry-cron
    command: run cron
    environment:
      - SENTRY_MEMCACHED_HOST=memcached
      - SENTRY_REDIS_HOST=redis
      - SENTRY_POSTGRES_HOST=postgres
      - SENTRY_EMAIL_HOST=smtp
      - SENTRY_SECRET_KEY=${SENTRY_SECRET_KEY}
    networks:
      - internal-network
  sentry-worker:
    <<: *sentry-defaults
    container_name: sentry-worker
    environment:
      - SENTRY_MEMCACHED_HOST=memcached
      - SENTRY_REDIS_HOST=redis
      - SENTRY_POSTGRES_HOST=postgres
      - SENTRY_EMAIL_HOST=smtp
      - SENTRY_SECRET_KEY=${SENTRY_SECRET_KEY}
    command: run worker
    networks:
      - internal-network
#Docker Networks
networks:
  app-network:
    driver: bridge
  internal-network:
    driver: bridge
#Volumes
volumes:
  mysqldata:
  sentry-data:
    external: true
  sentry-postgres:
    external: true
